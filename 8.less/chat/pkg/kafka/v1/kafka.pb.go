// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.1
// source: kafka/v1/kafka.proto

package kafka_v1

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatMessageEvent_EventType int32

const (
	ChatMessageEvent_EVENT_TYPE_UNSPECIFIED ChatMessageEvent_EventType = 0
	ChatMessageEvent_EVENT_TYPE_CREATED     ChatMessageEvent_EventType = 1
	ChatMessageEvent_EVENT_TYPE_UPDATED     ChatMessageEvent_EventType = 2
	ChatMessageEvent_EVENT_TYPE_DELETED     ChatMessageEvent_EventType = 3
)

// Enum value maps for ChatMessageEvent_EventType.
var (
	ChatMessageEvent_EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_CREATED",
		2: "EVENT_TYPE_UPDATED",
		3: "EVENT_TYPE_DELETED",
	}
	ChatMessageEvent_EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_CREATED":     1,
		"EVENT_TYPE_UPDATED":     2,
		"EVENT_TYPE_DELETED":     3,
	}
)

func (x ChatMessageEvent_EventType) Enum() *ChatMessageEvent_EventType {
	p := new(ChatMessageEvent_EventType)
	*p = x
	return p
}

func (x ChatMessageEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMessageEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_kafka_v1_kafka_proto_enumTypes[0].Descriptor()
}

func (ChatMessageEvent_EventType) Type() protoreflect.EnumType {
	return &file_kafka_v1_kafka_proto_enumTypes[0]
}

func (x ChatMessageEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMessageEvent_EventType.Descriptor instead.
func (ChatMessageEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_kafka_v1_kafka_proto_rawDescGZIP(), []int{0, 0}
}

type ChatMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ChatMessageEvent_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Payload  *ChatMessageEvent_Payload  `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ChatMessageEvent) Reset() {
	*x = ChatMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_v1_kafka_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageEvent) ProtoMessage() {}

func (x *ChatMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_v1_kafka_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageEvent.ProtoReflect.Descriptor instead.
func (*ChatMessageEvent) Descriptor() ([]byte, []int) {
	return file_kafka_v1_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessageEvent) GetMetadata() *ChatMessageEvent_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ChatMessageEvent) GetPayload() *ChatMessageEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ChatMessageEvent_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId   string                     `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CreatedAt *timestamppb.Timestamp     `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EventType ChatMessageEvent_EventType `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=kafka_v1.ChatMessageEvent_EventType" json:"event_type,omitempty"`
}

func (x *ChatMessageEvent_Metadata) Reset() {
	*x = ChatMessageEvent_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_v1_kafka_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageEvent_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageEvent_Metadata) ProtoMessage() {}

func (x *ChatMessageEvent_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_v1_kafka_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageEvent_Metadata.ProtoReflect.Descriptor instead.
func (*ChatMessageEvent_Metadata) Descriptor() ([]byte, []int) {
	return file_kafka_v1_kafka_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChatMessageEvent_Metadata) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ChatMessageEvent_Metadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatMessageEvent_Metadata) GetEventType() ChatMessageEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return ChatMessageEvent_EVENT_TYPE_UNSPECIFIED
}

type ChatMessageEvent_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ChatId    string                 `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	SessionId string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Nickname  string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Text      string                 `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ChatMessageEvent_Payload) Reset() {
	*x = ChatMessageEvent_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_v1_kafka_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageEvent_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageEvent_Payload) ProtoMessage() {}

func (x *ChatMessageEvent_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_v1_kafka_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageEvent_Payload.ProtoReflect.Descriptor instead.
func (*ChatMessageEvent_Payload) Descriptor() ([]byte, []int) {
	return file_kafka_v1_kafka_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ChatMessageEvent_Payload) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatMessageEvent_Payload) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatMessageEvent_Payload) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChatMessageEvent_Payload) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ChatMessageEvent_Payload) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatMessageEvent_Payload) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_kafka_v1_kafka_proto protoreflect.FileDescriptor

var file_kafka_v1_kafka_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x76, 0x31,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf7, 0x04, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61,
	0x5f, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61,
	0x5f, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xa5, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6b,
	0x61, 0x66, 0x6b, 0x61, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xca, 0x01,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6f, 0x0a, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0x1c, 0x5a, 0x1a, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x76, 0x31,
	0x3b, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_kafka_v1_kafka_proto_rawDescOnce sync.Once
	file_kafka_v1_kafka_proto_rawDescData = file_kafka_v1_kafka_proto_rawDesc
)

func file_kafka_v1_kafka_proto_rawDescGZIP() []byte {
	file_kafka_v1_kafka_proto_rawDescOnce.Do(func() {
		file_kafka_v1_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(file_kafka_v1_kafka_proto_rawDescData)
	})
	return file_kafka_v1_kafka_proto_rawDescData
}

var file_kafka_v1_kafka_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kafka_v1_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kafka_v1_kafka_proto_goTypes = []interface{}{
	(ChatMessageEvent_EventType)(0),   // 0: kafka_v1.ChatMessageEvent.EventType
	(*ChatMessageEvent)(nil),          // 1: kafka_v1.ChatMessageEvent
	(*ChatMessageEvent_Metadata)(nil), // 2: kafka_v1.ChatMessageEvent.Metadata
	(*ChatMessageEvent_Payload)(nil),  // 3: kafka_v1.ChatMessageEvent.Payload
	(*timestamppb.Timestamp)(nil),     // 4: google.protobuf.Timestamp
}
var file_kafka_v1_kafka_proto_depIdxs = []int32{
	2, // 0: kafka_v1.ChatMessageEvent.metadata:type_name -> kafka_v1.ChatMessageEvent.Metadata
	3, // 1: kafka_v1.ChatMessageEvent.payload:type_name -> kafka_v1.ChatMessageEvent.Payload
	4, // 2: kafka_v1.ChatMessageEvent.Metadata.created_at:type_name -> google.protobuf.Timestamp
	0, // 3: kafka_v1.ChatMessageEvent.Metadata.event_type:type_name -> kafka_v1.ChatMessageEvent.EventType
	4, // 4: kafka_v1.ChatMessageEvent.Payload.timestamp:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_kafka_v1_kafka_proto_init() }
func file_kafka_v1_kafka_proto_init() {
	if File_kafka_v1_kafka_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kafka_v1_kafka_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_v1_kafka_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageEvent_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_v1_kafka_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageEvent_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kafka_v1_kafka_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kafka_v1_kafka_proto_goTypes,
		DependencyIndexes: file_kafka_v1_kafka_proto_depIdxs,
		EnumInfos:         file_kafka_v1_kafka_proto_enumTypes,
		MessageInfos:      file_kafka_v1_kafka_proto_msgTypes,
	}.Build()
	File_kafka_v1_kafka_proto = out.File
	file_kafka_v1_kafka_proto_rawDesc = nil
	file_kafka_v1_kafka_proto_goTypes = nil
	file_kafka_v1_kafka_proto_depIdxs = nil
}
